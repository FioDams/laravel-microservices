services:
  auth-service:
    build: ./auth-service
    volumes:
      - ./auth-service:/var/www
    environment:
      - DB_CONNECTION=mysql
      - DB_HOST=auth-db
      - DB_PORT=3306
      - DB_DATABASE=auth_db
      - DB_USERNAME=auth_user
      - DB_PASSWORD=auth_password
      - FRONTEND_URL=http://localhost:8080
    depends_on:
      - auth-db
    networks:
      - app-network

  auth-db:
    image: mysql:8.0
    environment:
      - MYSQL_DATABASE=auth_db
      - MYSQL_USER=auth_user
      - MYSQL_PASSWORD=auth_password
      - MYSQL_ROOT_PASSWORD=root_password
    volumes:
      - auth-db-data:/var/lib/mysql
    networks:
      - app-network

  product-service:
    build: ./product-service
    volumes:
      - ./product-service:/var/www
    environment:
      - DB_CONNECTION=mysql
      - DB_HOST=product-db
      - DB_PORT=3306
      - DB_DATABASE=product_db
      - DB_USERNAME=product_user
      - DB_PASSWORD=product_password
    depends_on:
      - product-db
    networks:
      - app-network

  product-db:
    image: mysql:8.0
    environment:
      - MYSQL_DATABASE=product_db
      - MYSQL_USER=product_user
      - MYSQL_PASSWORD=product_password
      - MYSQL_ROOT_PASSWORD=root_password
    volumes:
      - product-db-data:/var/lib/mysql
    networks:
      - app-network

  order-service:
    build: ./order-service
    volumes:
      - ./order-service:/var/www
    environment:
      - DB_CONNECTION=mysql
      - DB_HOST=order-db
      - DB_PORT=3306
      - DB_DATABASE=order_db
      - DB_USERNAME=order_user
      - DB_PASSWORD=order_password
    depends_on:
      - order-db
    networks:
      - app-network

  order-db:
    image: mysql:8.0
    environment:
      - MYSQL_DATABASE=order_db
      - MYSQL_USER=order_user
      - MYSQL_PASSWORD=order_password
      - MYSQL_ROOT_PASSWORD=root_password
    volumes:
      - order-db-data:/var/lib/mysql
    networks:
      - app-network

  gateway:
    build: ./gateway
    ports:
      - "80:80"
    depends_on:
      - auth-service
      - product-service
      - order-service
    networks:
      - app-network

  redis:
    image: redis:alpine
    networks:
      - app-network

  frontend:
    build: ./frontend-service
    ports:
      - "8080:8080"
    volumes:
      - ./frontend-service:/app
    command: npm run dev
    environment:
      - HOST=0.0.0.0
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  auth-db-data:
  product-db-data:
  order-db-data: